# Generated by Django 5.2.6 on 2025-10-01 15:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Le titre du livre', max_length=200, verbose_name='Titre')),
                ('author', models.CharField(help_text="Le nom de l'auteur du livre", max_length=150, verbose_name='Auteur')),
                ('year', models.PositiveIntegerField(help_text="L'année où le livre a été publié", verbose_name='Année de publication')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Livre',
                'verbose_name_plural': 'Livres',
                'ordering': ['title'],
                'indexes': [models.Index(fields=['title'], name='library_boo_title_c38ef2_idx'), models.Index(fields=['author'], name='library_boo_author_66aacb_idx'), models.Index(fields=['year'], name='library_boo_year_92de1b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom et prénom du lecteur', max_length=100, verbose_name='Nom complet')),
                ('email', models.EmailField(help_text='Adresse email du lecteur (unique)', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lecteur',
                'verbose_name_plural': 'Lecteurs',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['email'], name='library_rea_email_1a2ff1_idx'), models.Index(fields=['name'], name='library_rea_name_9a3c08_idx')],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de réservation')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si la réservation est toujours en cours', verbose_name='Réservation active')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name="Date d'annulation")),
                ('notes', models.TextField(blank=True, help_text='Informations supplémentaires sur la réservation', verbose_name='Notes')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='library.book', verbose_name='Livre')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='library.reader', verbose_name='Lecteur')),
            ],
            options={
                'verbose_name': 'Réservation',
                'verbose_name_plural': 'Réservations',
                'ordering': ['-reservation_date'],
                'indexes': [models.Index(fields=['is_active'], name='library_res_is_acti_ec76fa_idx'), models.Index(fields=['reservation_date'], name='library_res_reserva_3c0e7b_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('book',), name='unique_active_reservation_per_book')],
            },
        ),
    ]
